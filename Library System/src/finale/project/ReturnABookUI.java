/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finale.project;

import java.io.*;
import java.util.*;

/**
 *
 * @author salih
 */
public class ReturnABookUI extends javax.swing.JFrame {

    /**
     * Creates new form ReturnABook
     */
    public ReturnABookUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        returnABookTitle = new javax.swing.JLabel();
        bookNameTitle = new javax.swing.JLabel();
        bookNameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        informationTextArea = new javax.swing.JTextArea();
        calculateFinesButton = new javax.swing.JButton();
        informationLabel = new javax.swing.JLabel();
        previousPageButton = new javax.swing.JButton();
        returnBookButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        returnABookTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        returnABookTitle.setText("Return A Book");

        bookNameTitle.setText("Book Name");

        informationTextArea.setColumns(20);
        informationTextArea.setRows(5);
        jScrollPane1.setViewportView(informationTextArea);

        calculateFinesButton.setText("Calculate Fines");
        calculateFinesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateFinesButtonActionPerformed(evt);
            }
        });

        informationLabel.setText("Information");

        previousPageButton.setText("Back To Previous Page");
        previousPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageButtonActionPerformed(evt);
            }
        });

        returnBookButton.setText("Return Book");
        returnBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(returnABookTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(previousPageButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bookNameTitle)
                                    .addComponent(bookNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(returnBookButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(calculateFinesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(informationLabel))))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(returnABookTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookNameTitle)
                    .addComponent(informationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bookNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(calculateFinesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(returnBookButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(previousPageButton)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateFinesButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String bookName = bookNameTextField.getText();
        if (isBookInFile(bookName, "BookListAvailable.txt")) {
            informationTextArea.setText("The book is not signed out. No fees have to be paid.");
        } else if (isBookInFile(bookName, "BookListUnavailable.txt")) {
            informationTextArea.setText("The book is not late. No fees have to be paid.");
        } else if (isBookInFile(bookName, "LateBooks.txt")) {
            informationTextArea.setText("The book is late. The customer must pay a $30 late fee to the librarian.");
        } else {
            informationTextArea.setText("The book is not registered in the system.");
        }
    }

    private void returnBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookButtonActionPerformed
        String bookName = bookNameTextField.getText();
        if (isBookInFile(bookName, "BookListUnavailable.txt")) {
            informationTextArea.setText("The book is returned.");
            moveBookBetweenFiles(bookName, "BookListUnavailable.txt", "BookListAvailable.txt");
        } else if (isBookInFile(bookName, "LateBooks.txt")) {
            informationTextArea.setText("The book is returned after the payment to the library.");
            moveBookBetweenFiles(bookName, "LateBooks.txt", "BookListAvailable.txt");
        } else {
            informationTextArea.setText("The book is not registered in the system.");
        }
    }//GEN-LAST:event_returnBookButtonActionPerformed

    private boolean isBookInFile(String bookName, String fileName) {
        File file = new File(fileName);
        System.out.println("Looking for file: " + file.getAbsolutePath());
        if (!file.exists()) {
            System.out.println("File does not exist.");
            return false;
        }
        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = br.readLine()) != null) {
                if (line.trim().equalsIgnoreCase(bookName.trim())) {
                    return true;
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false;
    }

    private void moveBookBetweenFiles(String bookName, String fromFile, String toFile) {
        List<String> lines = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(fromFile))) {
            String line;
            while ((line = br.readLine()) != null) {
                if (!line.trim().equalsIgnoreCase(bookName.trim())) {
                    lines.add(line);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(fromFile))) {
            for (String line : lines) {
                bw.write(line);
                bw.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(toFile, true))) {
            bw.write(bookName);
            bw.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void previousPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousPageButtonActionPerformed
        CustomerUI jf1 = new CustomerUI();

        jf1.show();
        dispose();     }//GEN-LAST:event_previousPageButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnABookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnABookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnABookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnABookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnABookUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextField bookNameTextField;
    javax.swing.JLabel bookNameTitle;
    javax.swing.JButton calculateFinesButton;
    javax.swing.JLabel informationLabel;
    javax.swing.JTextArea informationTextArea;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JButton previousPageButton;
    javax.swing.JLabel returnABookTitle;
    javax.swing.JButton returnBookButton;
    // End of variables declaration//GEN-END:variables
}
